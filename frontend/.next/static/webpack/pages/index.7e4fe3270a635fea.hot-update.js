"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/hooks/useProjects.ts":
/*!**********************************!*\
  !*** ./src/hooks/useProjects.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useProjects: () => (/* binding */ useProjects)\n/* harmony export */ });\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wagmi */ \"(pages-dir-browser)/./node_modules/wagmi/dist/esm/exports/index.js\");\n/* harmony import */ var _lib_abis_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/abis/factory */ \"(pages-dir-browser)/./src/lib/abis/factory.ts\");\n/* harmony import */ var _lib_addresses__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/addresses */ \"(pages-dir-browser)/./src/lib/addresses.ts\");\n\n\n\nfunction useProjects() {\n    const chainId = (0,wagmi__WEBPACK_IMPORTED_MODULE_2__.useChainId)();\n    const { data, isLoading, refetch, error, status } = (0,wagmi__WEBPACK_IMPORTED_MODULE_2__.useReadContract)({\n        address: _lib_addresses__WEBPACK_IMPORTED_MODULE_1__.FACTORY_ADDRESS,\n        abi: _lib_abis_factory__WEBPACK_IMPORTED_MODULE_0__.factoryAbi,\n        functionName: 'getAllProjects',\n        chainId\n    });\n    // Optional: log errors to see whatâ€™s wrong\n    if (status === 'error') {\n        // eslint-disable-next-line no-console\n        console.error('getAllProjects error:', error);\n    }\n    const projects = data || [];\n    return {\n        projects,\n        isLoading,\n        refetch,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9ob29rcy91c2VQcm9qZWN0cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBQ0g7QUFDRTtBQUU1QyxTQUFTSTtJQUNkLE1BQU1DLFVBQVVMLGlEQUFVQTtJQUUxQixNQUFNLEVBQUVNLElBQUksRUFBRUMsU0FBUyxFQUFFQyxPQUFPLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFLEdBQUdULHNEQUFlQSxDQUFDO1FBQ2xFVSxTQUFTUiwyREFBZUE7UUFDeEJTLEtBQUtWLHlEQUFVQTtRQUNmVyxjQUFjO1FBQ2RSO0lBQ0Y7SUFFQSwyQ0FBMkM7SUFDM0MsSUFBSUssV0FBVyxTQUFTO1FBQ3RCLHNDQUFzQztRQUN0Q0ksUUFBUUwsS0FBSyxDQUFDLHlCQUF5QkE7SUFDekM7SUFFQSxNQUFNTSxXQUFXLFFBQTZCLEVBQUU7SUFDaEQsT0FBTztRQUFFQTtRQUFVUjtRQUFXQztRQUFTQztJQUFNO0FBQy9DIiwic291cmNlcyI6WyIvVXNlcnMvZGF2aWQvZGV2L3JlYWwtZXN0YXRlLXRva2VuL2Zyb250ZW5kL3NyYy9ob29rcy91c2VQcm9qZWN0cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDaGFpbklkLCB1c2VSZWFkQ29udHJhY3QgfSBmcm9tICd3YWdtaSc7XG5pbXBvcnQgeyBmYWN0b3J5QWJpIH0gZnJvbSAnLi4vbGliL2FiaXMvZmFjdG9yeSc7XG5pbXBvcnQgeyBGQUNUT1JZX0FERFJFU1MgfSBmcm9tICcuLi9saWIvYWRkcmVzc2VzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVByb2plY3RzKCkge1xuICBjb25zdCBjaGFpbklkID0gdXNlQ2hhaW5JZCgpO1xuXG4gIGNvbnN0IHsgZGF0YSwgaXNMb2FkaW5nLCByZWZldGNoLCBlcnJvciwgc3RhdHVzIH0gPSB1c2VSZWFkQ29udHJhY3Qoe1xuICAgIGFkZHJlc3M6IEZBQ1RPUllfQUREUkVTUyxcbiAgICBhYmk6IGZhY3RvcnlBYmksXG4gICAgZnVuY3Rpb25OYW1lOiAnZ2V0QWxsUHJvamVjdHMnLFxuICAgIGNoYWluSWRcbiAgfSk7XG5cbiAgLy8gT3B0aW9uYWw6IGxvZyBlcnJvcnMgdG8gc2VlIHdoYXTigJlzIHdyb25nXG4gIGlmIChzdGF0dXMgPT09ICdlcnJvcicpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUuZXJyb3IoJ2dldEFsbFByb2plY3RzIGVycm9yOicsIGVycm9yKTtcbiAgfVxuXG4gIGNvbnN0IHByb2plY3RzID0gKGRhdGEgYXMgYDB4JHtzdHJpbmd9YFtdKSB8fCBbXTtcbiAgcmV0dXJuIHsgcHJvamVjdHMsIGlzTG9hZGluZywgcmVmZXRjaCwgZXJyb3IgfTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VDaGFpbklkIiwidXNlUmVhZENvbnRyYWN0IiwiZmFjdG9yeUFiaSIsIkZBQ1RPUllfQUREUkVTUyIsInVzZVByb2plY3RzIiwiY2hhaW5JZCIsImRhdGEiLCJpc0xvYWRpbmciLCJyZWZldGNoIiwiZXJyb3IiLCJzdGF0dXMiLCJhZGRyZXNzIiwiYWJpIiwiZnVuY3Rpb25OYW1lIiwiY29uc29sZSIsInByb2plY3RzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/hooks/useProjects.ts\n"));

/***/ })

});